
// função de cadastro de um ponto de coleta
void CadastroPontoColeta(ponto_coleta *lista_pontos, int i){
    printf("Insira o id do ponto de coleta: ");
    scanf("%d", &lista_pontos[i].id);

    printf("insira o endereço do ponto de coleta: ");
    scanf("%s", &lista_pontos[i].ende_pc);

}

// função que atualiza um ponto de coleta
void AtualizaPontoColeta(ponto_coleta *lista_pontos, int i, int id){
    for(int j = 0; j < i + 1; j++){
        if (lista_pontos[j].id == id){
            printf("Insira o novo endereço do ponto de coleta: ");
            scanf("%s", lista_pontos[j].ende_pc);
        }
    }
    printf("Informação atualizada com sucesso!");
}



void MenuPontoColeta(ponto_coleta *lista_pontos, char opcao, int i){       //função com as ações referentes a pontos de coleta.

    switch(opcao){
        case 'a':
              CadastroPontoColeta(lista_pontos, i);
              
              printf("\nDeseja realizar outra operação na aba de pontos de coleta? (s)sim (n)não");
              scanf("%c", &opcao);

              if (opcao == 's')
                MenuPontoColeta(lista_pontos, opcao, i);
              break;
        
        case 'b':
            int id; 

            AtualizaPontoColeta(lista_pontos, i,id);

            printf("\nDeseja realizar outra operação na aba de pontos de coleta? (s)sim (n)não");
            scanf("%c", &opcao);

              if (opcao == 's')
                MenuPontoColeta(lista_pontos, opcao, i);
            break;
    }
}

// função que gera id para o ponto de coleta
int id_coleta = 02000;
void cria_id_pontocoleta(ponto_coleta *lista_pontos, int i){
    id_coleta +=1;

    lista_pontos[i].id = id_coleta;

}


