
// função de cadastro de um ponto de coleta
void CadastroPontoColeta(ponto_coleta *lista_pontos, int i){
    printf("Insira o id do ponto de coleta: ");
    scanf("%d", &lista_pontos[i].id);

    printf("insira o endereço do ponto de coleta: ");
    scanf("%s", &lista_pontos[i].ende_pc);
    
    i+=1;

}

// função que atualiza um ponto de coleta
void AtualizaPontoColeta(ponto_coleta *lista_pontos, int i, int id){
    for(int j = 0; j < i + 1; j++){
        if (lista_pontos[j].id == id){
            printf("Insira o novo endereço do ponto de coleta: ");
            scanf("%s", lista_pontos[j].ende_pc);
        }
    }
    printf("Informação atualizada com sucesso!");
}



void MenuPontoColeta(ponto_coleta *lista_pontos, char op_aba, int i, char resp){       //função com as ações referentes a pontos de coleta.

        
    switch(op_aba){

        
        case 'a':
              CadastroPontoColeta(lista_pontos, i);
              
              printf("\nDeseja realizar outra operação na aba de pontos de coleta? (s)sim (n)não");
              scanf(" %c", &resp);

              if (resp == 's')
                printf("(a)Cadastrar Ponto de Coleta\n(b)Atualizar Informações\n");
                scanf(" %c", &op_aba);
                MenuPontoColeta(lista_pontos, op_aba, i, resp);
              break;
        
        case 'b':
            int id; 

            AtualizaPontoColeta(lista_pontos, i,id);

            printf("\nDeseja realizar outra operação na aba de pontos de coleta? (s)sim (n)não");
            scanf(" %c", &resp);

              if (resp == 's'){
                printf("(a)Cadastrar Ponto de Coleta\n(b)Atualizar Informações\n");
                scanf(" %c", &op_aba);
                MenuPontoColeta(lista_pontos, op_aba, i, resp);}
            break;
    }
}
